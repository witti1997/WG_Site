{"version":3,"file":"component---src-pages-einkaufsliste-tsx-0b82d10bd9f7427f33d4.js","mappings":"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","sources":["webpack://my-first-gatsby-site/./src/components/layout.module.css","webpack://my-first-gatsby-site/./src/components/layout.tsx","webpack://my-first-gatsby-site/./src/components/seo.tsx","webpack://my-first-gatsby-site/./src/components/EinkaufslisteComponents.tsx","webpack://my-first-gatsby-site/./src/components/EinkaufslisteContainer.tsx","webpack://my-first-gatsby-site/./src/pages/einkaufsliste.tsx","webpack://my-first-gatsby-site/./src/components/EinkaufslisteComponents.module.css"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--78b04\";\nexport var heading = \"layout-module--heading--f158c\";\nexport var navLinkItem = \"layout-module--nav-link-item--a5f0a\";\nexport var navLinkText = \"layout-module--nav-link-text--69cda\";\nexport var navLinks = \"layout-module--nav-links--1113b\";\nexport var siteTitle = \"layout-module--siteTitle--86bf1\";","import * as React from 'react';\r\nimport { Link, useStaticQuery, graphql } from 'gatsby';\r\nimport {\r\n  container,\r\n  heading,\r\n  navLinks,\r\n  navLinkItem,\r\n  navLinkText,\r\n  siteTitle\r\n} from './layout.module.css';\r\n\r\n// Definition der Props für die Layout-Komponente\r\ninterface LayoutProps {\r\n  pageTitle: string;\r\n  children: React.ReactNode; // Kinder können jedes React-Element sein\r\n}\r\n\r\n// Layout-Komponente mit typisierten Props\r\nconst Layout: React.FC<LayoutProps> = ({ pageTitle, children }): JSX.Element => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  return (\r\n    <div className=\"flex flex-col min-h-screen p-4 max-w-custom mx-auto\">\r\n      <header className=\"text-4xl font-bold text-headerColor mb-4\">{data.site.siteMetadata.title}</header>\r\n      <nav>\r\n        <ul className=\"flex flex-wrap gap-4 justify-left mb-8\">\r\n          <li className=\"block py-2 px-4 bg-gray-200 text-black rounded-md hover:bg-gray-300 transition duration-300\">\r\n            <Link to=\"/\" className={navLinkText}>Home</Link>\r\n          </li>\r\n\r\n          <li className=\"block py-2 px-4 bg-gray-200 text-black rounded-md hover:bg-gray-300 transition duration-300\">\r\n            <Link to=\"/about\" className={navLinkText}>About</Link>\r\n          </li>\r\n\r\n          <li className=\"block py-2 px-4 bg-gray-200 text-black rounded-md hover:bg-gray-300 transition duration-300\">\r\n            <Link to=\"/blog\" className={navLinkText}>Blog</Link>\r\n          </li>\r\n\r\n          <li className=\"block py-2 px-4 bg-gray-200 text-black rounded-md hover:bg-gray-300 transition duration-300\">\r\n            <Link to=\"/putzplan\" className={navLinkText}>Putzplan</Link>\r\n          </li>\r\n\r\n          <li className=\"block py-2 px-4 bg-gray-200 text-black rounded-md hover:bg-gray-300 transition duration-300\">\r\n            <Link to=\"/einkaufsliste\" className={navLinkText}>Deine Einkaufsliste</Link>\r\n          </li>\r\n\r\n        </ul>\r\n      </nav>\r\n      <main className=\"flex-grow\">\r\n        <h1 className=\"text-2xl font-semibold text-subheaderColor mb-4\">{pageTitle}</h1>\r\n        {children}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;","import * as React from 'react'\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\n\r\nconst Seo = ({ title }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <title>{title} | {data.site.siteMetadata.title}</title>\r\n  )\r\n}\r\n\r\nexport default Seo","import React from 'react';\r\nimport { useState } from 'react';\r\nimport {\r\n    shoppingListItemStyle,\r\n    shoppingListItemCheckboxStyle,\r\n    addItemForm,\r\n    addItemInput,\r\n    addItemButton,\r\n    removeCompletedButton} from './EinkaufslisteComponents.module.css';\r\n//import Item  from './EinkaufslisteContainer';\r\n\r\ninterface Item {\r\n    id: number;\r\n    name: string;\r\n    completed: boolean;\r\n  }\r\n\r\ninterface ShoppingListProps {\r\n  items: Item[];\r\n  toggleItemCompletion: (id: number) => void;\r\n}\r\n\r\ninterface ShoppingListItemProps {\r\n    item: Item;\r\n    toggleItemCompletion: (id: number) => void;\r\n}\r\n  \r\nconst ShoppingListItem: React.FC<ShoppingListItemProps> = ({ item, toggleItemCompletion }) => {\r\n    console.log(shoppingListItemStyle);\r\n    return (\r\n        <li className={shoppingListItemStyle}>\r\n        <input\r\n            className={shoppingListItemCheckboxStyle}\r\n            type=\"checkbox\"\r\n            checked={item.completed}\r\n            onChange={() => toggleItemCompletion(item.id)}\r\n        />\r\n        {item.name}\r\n        </li>\r\n    );\r\n}\r\n  \r\n  \r\nconst ShoppingList: React.FC<ShoppingListProps> = ({ items, toggleItemCompletion }) => {\r\n  return (\r\n    <ul style={{ paddingLeft: \"0\" }}>\r\n      {items.map(item => (\r\n        <ShoppingListItem key={item.id} item={item} toggleItemCompletion={toggleItemCompletion} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\ninterface AddItemFormProps {\r\n    addItem: (name: string) => void;\r\n    removeCompletedItems: () => void;\r\n}\r\n  \r\nconst AddItemForm: React.FC<AddItemFormProps> = ({ addItem, removeCompletedItems }) => {\r\n    const [name, setName] = useState('');\r\n\r\n    const handleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        if (name.trim()) {\r\n        addItem(name);\r\n        setName('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form className={addItemForm} onSubmit={handleSubmit}>\r\n        <input\r\n            className={addItemInput}\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={e => setName(e.target.value)}\r\n            placeholder=\"Neues Item\"\r\n        />\r\n        <button className={addItemButton} type=\"submit\">Hinzufügen</button>\r\n        <button className={removeCompletedButton} type=\"button\" onClick={removeCompletedItems}>Löschen</button>\r\n        </form>\r\n    );\r\n}\r\n  \r\n\r\nexport {ShoppingList, AddItemForm};","import React, { useState, useEffect } from 'react';\r\nimport {ShoppingList, AddItemForm } from './EinkaufslisteComponents';\r\n//import AddItemForm from './AddItemForm';\r\n\r\ninterface Item {\r\n  id: number;\r\n  name: string;\r\n  completed: boolean;\r\n}\r\n\r\nconst EinkaufslisteContainer: React.FC = () => {\r\n  const [items, setItems] = useState<Item[]>([]);\r\n\r\n  // Laden der Items aus dem localStorage beim Laden der Komponente\r\n  useEffect(() => {\r\n    const storedItems = localStorage.getItem('shoppingListItems');\r\n    if (storedItems) {\r\n      setItems(JSON.parse(storedItems));\r\n    }\r\n  }, []);\r\n  \r\n  // Speichern der Items in den localStorage bei jeder Änderung\r\n  useEffect(() => {\r\n    localStorage.setItem('shoppingListItems', JSON.stringify(items));\r\n  }, [items]);\r\n\r\n\r\n  const addItem = (name: string) => {\r\n    const newItem = {\r\n      id: Date.now(),\r\n      name,\r\n      completed: false\r\n    };\r\n    setItems([...items, newItem]);\r\n  };\r\n\r\n  const removeItems = () =>  {\r\n    setItems(items.filter(item => !item.completed))\r\n  }\r\n\r\n  const toggleItemCompletion = (id: number) => {\r\n    setItems(items.map(item =>\r\n      item.id === id ? { ...item, completed: !item.completed } : item\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AddItemForm addItem={addItem} removeCompletedItems={removeItems} />\r\n      <ShoppingList items={items} toggleItemCompletion={toggleItemCompletion} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport {EinkaufslisteContainer};\r\n","import * as React from 'react';\r\nimport Layout\r\n from '../components/layout';\r\nimport Seo from '../components/seo';\r\nimport {EinkaufslisteContainer} from '../components/EinkaufslisteContainer';\r\n// Typanmerkung für die Komponente: Die Komponente gibt ein JSX.Element zurück\r\nconst EinkaufsPage: React.FC = (): JSX.Element => {\r\n  return (\r\n    <Layout pageTitle='Deine persönliche Einkaufsliste'>\r\n      <EinkaufslisteContainer />\r\n    </Layout>\r\n  );\r\n};\r\n\r\n// Typanmerkung für die Head-Komponente\r\nexport const Head: React.FC = (): JSX.Element => <Seo title= \"Personal Shoppinglist\" />;\r\n\r\nexport default EinkaufsPage;","// extracted by mini-css-extract-plugin\nexport var addItemButton = \"EinkaufslisteComponents-module--addItemButton--e67df\";\nexport var addItemForm = \"EinkaufslisteComponents-module--addItemForm--9fac1\";\nexport var addItemInput = \"EinkaufslisteComponents-module--addItemInput--2c28a\";\nexport var removeCompletedButton = \"EinkaufslisteComponents-module--removeCompletedButton--57cf7\";\nexport var shoppingListItemCheckboxStyle = \"EinkaufslisteComponents-module--shoppingListItemCheckboxStyle--60e76\";\nexport var shoppingListItemStyle = \"EinkaufslisteComponents-module--shoppingListItemStyle--fc2de\";"],"names":["navLinkText","_ref","pageTitle","children","data","useStaticQuery","React","className","site","siteMetadata","title","Link","to","ShoppingListItem","item","toggleItemCompletion","console","log","shoppingListItemStyle","shoppingListItemCheckboxStyle","type","checked","completed","onChange","id","name","ShoppingList","_ref2","items","style","paddingLeft","map","key","AddItemForm","_ref3","addItem","removeCompletedItems","setName","useState","addItemForm","onSubmit","e","preventDefault","trim","addItemInput","value","target","placeholder","addItemButton","removeCompletedButton","onClick","EinkaufslisteContainer","setItems","useEffect","storedItems","localStorage","getItem","JSON","parse","setItem","stringify","newItem","Date","now","filter","Head","Seo","Layout"],"sourceRoot":""}